# This file is part of JavaSMT,
# an API wrapper for a collection of SMT solvers:
# https://github.com/sosy-lab/java-smt
#
# SPDX-FileCopyrightText: 2025 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

version: build {build} {branch}

os: Visual Studio 2019

clone_depth: 1

install:
  - ps: |
      Add-Type -AssemblyName System.IO.Compression.FileSystem
      $antPath = "C:\ant\apache-ant-1.10.15"
      if (!(Test-Path -Path $antPath)) {
        echo "Downloading and extracting Apache Ant..."
        (New-Object System.Net.WebClient).DownloadFile(
          'https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.15-bin.zip',
          'C:\ant-bin.zip'
        )
        [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\ant-bin.zip", "C:\ant")
      }
  # Set environment variables
  - SET JAVA_HOME=C:\Program Files\Java\jdk17
  - SET PATH=C:\ant\apache-ant-1.10.15\bin;%JAVA_HOME%\bin;%PATH%
  - SET IVY_CACHE_DIR=C:\ivy
  # Verify environment
  - echo %USERPROFILE%
  - echo %JAVA_HOME%
  - echo %PATH%
  - java -version

build_script:
  - ant build
  # Windows does not allow symlinks, thus we need to copy native solver binaries
  # to make it available for JUnit tests.
  # See lib\native\x86_64-windows\README.md for details.
  - ps: |
      echo "Copying native solver binaries..."
      Copy-Item -Path "lib\java\runtime-z3\x64\*.dll" -Destination "lib\native\x86_64-windows\" -Force
      Copy-Item -Path "lib\java\runtime-mathsat\x64\*.dll" -Destination "lib\native\x86_64-windows\" -Force
      Copy-Item -Path "lib\java\runtime-bitwuzla\x64\*.dll" -Destination "lib\native\x86_64-windows\" -Force

test_script:
  - ant unit-tests

on_finish:
  - ps: |
      echo "Uploading JUnit test results..."
      $wc = New-Object 'System.Net.WebClient'
      $files = Get-ChildItem -Path ".\junit\TEST-*.xml" -Exclude "*VariableNames*"
      $url = "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
      foreach ($file in $files) {
        echo "Uploading $($file.FullName)..."
        $wc.UploadFile($url, $file.FullName)
      }
  - ps: |
      echo "Uploading error files as artifacts..."
      $errorFiles = Get-ChildItem -Path ".\hs_err_pid*"
      foreach ($file in $errorFiles) {
        echo "Uploading $($file.FullName)..."
        Push-AppveyorArtifact $file.FullName -DeploymentName $file.Name
      }
  - ps: |
      echo "Uploading replay files as artifacts..."
      $replayFiles = Get-ChildItem -Path ".\replay_pid*"
      foreach ($file in $replayFiles) {
        echo "Uploading $($file.FullName)..."
        Push-AppveyorArtifact $file.FullName -DeploymentName $file.Name
      }
  - ps: |
      echo "Compressing and uploading JUnit HTML report..."
      7z a JUnit.html.zip JUnit.html
      Push-AppveyorArtifact JUnit.html.zip -DeploymentName "JUnit Report"

cache:
  - C:\ant
  - C:\ivy
