// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt.solvers.bitwuzla.api;

public class Parser {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Parser(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Parser obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(Parser obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        BitwuzlaNativeJNI.delete_Parser(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Parser(TermManager tm, Options options, String language) {
    this(BitwuzlaNativeJNI.new_Parser__SWIG_0(TermManager.getCPtr(tm), tm, Options.getCPtr(options), options, language), true);
  }

  public Parser(TermManager tm, Options options) {
    this(BitwuzlaNativeJNI.new_Parser__SWIG_1(TermManager.getCPtr(tm), tm, Options.getCPtr(options), options), true);
  }

  public void parse(String input, boolean parse_only, boolean parse_file) {
    BitwuzlaNativeJNI.Parser_parse__SWIG_0(swigCPtr, this, input, parse_only, parse_file);
  }

  public void parse(String input, boolean parse_only) {
    BitwuzlaNativeJNI.Parser_parse__SWIG_1(swigCPtr, this, input, parse_only);
  }

  public void parse(String input) {
    BitwuzlaNativeJNI.Parser_parse__SWIG_2(swigCPtr, this, input);
  }

  public Term parse_term(String input) {
    return new Term(BitwuzlaNativeJNI.Parser_parse_term(swigCPtr, this, input), true);
  }

  public Sort parse_sort(String input) {
    return new Sort(BitwuzlaNativeJNI.Parser_parse_sort(swigCPtr, this, input), true);
  }

  public Vector_Sort get_declared_sorts() {
    return new Vector_Sort(BitwuzlaNativeJNI.Parser_get_declared_sorts(swigCPtr, this), true);
  }

  public Vector_Term get_declared_funs() {
    return new Vector_Term(BitwuzlaNativeJNI.Parser_get_declared_funs(swigCPtr, this), true);
  }

  public Bitwuzla bitwuzla() {
    long cPtr = BitwuzlaNativeJNI.Parser_bitwuzla(swigCPtr, this);
    return (cPtr == 0) ? null : new Bitwuzla(cPtr, true);
  }

}
