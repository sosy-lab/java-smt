// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt.solvers.bitwuzla.api;

public class Sort {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Sort(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Sort obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(Sort obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        BitwuzlaNativeJNI.delete_Sort(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean equals(Object object) {
    if(object instanceof Sort) {
      Sort that = (Sort) object;
      return this.isEqual(that);
    }
    return false;
  }

  public Sort() {
    this(BitwuzlaNativeJNI.new_Sort(), true);
  }

  public boolean is_null() {
    return BitwuzlaNativeJNI.Sort_is_null(swigCPtr, this);
  }

  public Sort array_index() {
    return new Sort(BitwuzlaNativeJNI.Sort_array_index(swigCPtr, this), true);
  }

  public Sort array_element() {
    return new Sort(BitwuzlaNativeJNI.Sort_array_element(swigCPtr, this), true);
  }

  public Vector_Sort fun_domain() {
    return new Vector_Sort(BitwuzlaNativeJNI.Sort_fun_domain(swigCPtr, this), true);
  }

  public Sort fun_codomain() {
    return new Sort(BitwuzlaNativeJNI.Sort_fun_codomain(swigCPtr, this), true);
  }

  public boolean is_array() {
    return BitwuzlaNativeJNI.Sort_is_array(swigCPtr, this);
  }

  public boolean is_bool() {
    return BitwuzlaNativeJNI.Sort_is_bool(swigCPtr, this);
  }

  public boolean is_bv() {
    return BitwuzlaNativeJNI.Sort_is_bv(swigCPtr, this);
  }

  public boolean is_fp() {
    return BitwuzlaNativeJNI.Sort_is_fp(swigCPtr, this);
  }

  public boolean is_fun() {
    return BitwuzlaNativeJNI.Sort_is_fun(swigCPtr, this);
  }

  public boolean is_rm() {
    return BitwuzlaNativeJNI.Sort_is_rm(swigCPtr, this);
  }

  public String toString() {
    return BitwuzlaNativeJNI.Sort_toString(swigCPtr, this);
  }

  public int id() {
    return BitwuzlaNativeJNI.Sort_id(swigCPtr, this);
  }

  public int bv_size() {
    return BitwuzlaNativeJNI.Sort_bv_size(swigCPtr, this);
  }

  public int fp_exp_size() {
    return BitwuzlaNativeJNI.Sort_fp_exp_size(swigCPtr, this);
  }

  public int fp_sig_size() {
    return BitwuzlaNativeJNI.Sort_fp_sig_size(swigCPtr, this);
  }

  public int fun_arity() {
    return BitwuzlaNativeJNI.Sort_fun_arity(swigCPtr, this);
  }

  public int hashCode() {
    return BitwuzlaNativeJNI.Sort_hashCode(swigCPtr, this);
  }

  public boolean isEqual(Sort other) {
    return BitwuzlaNativeJNI.Sort_isEqual(swigCPtr, this, Sort.getCPtr(other), other);
  }

}
