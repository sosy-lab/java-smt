// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt.solvers.bitwuzla.api;

public class BitwuzlaNativeJNI {
  public final static native long new_Vector_Int__SWIG_0();
  public final static native long new_Vector_Int__SWIG_1(long jarg1, Vector_Int jarg1_);
  public final static native long Vector_Int_capacity(long jarg1, Vector_Int jarg1_);
  public final static native void Vector_Int_reserve(long jarg1, Vector_Int jarg1_, long jarg2);
  public final static native boolean Vector_Int_isEmpty(long jarg1, Vector_Int jarg1_);
  public final static native void Vector_Int_clear(long jarg1, Vector_Int jarg1_);
  public final static native long new_Vector_Int__SWIG_2(int jarg1, int jarg2);
  public final static native int Vector_Int_doSize(long jarg1, Vector_Int jarg1_);
  public final static native void Vector_Int_doAdd__SWIG_0(long jarg1, Vector_Int jarg1_, int jarg2);
  public final static native void Vector_Int_doAdd__SWIG_1(long jarg1, Vector_Int jarg1_, int jarg2, int jarg3);
  public final static native int Vector_Int_doRemove(long jarg1, Vector_Int jarg1_, int jarg2);
  public final static native int Vector_Int_doGet(long jarg1, Vector_Int jarg1_, int jarg2);
  public final static native int Vector_Int_doSet(long jarg1, Vector_Int jarg1_, int jarg2, int jarg3);
  public final static native void Vector_Int_doRemoveRange(long jarg1, Vector_Int jarg1_, int jarg2, int jarg3);
  public final static native void delete_Vector_Int(long jarg1);
  public final static native long new_Vector_String__SWIG_0();
  public final static native long new_Vector_String__SWIG_1(long jarg1, Vector_String jarg1_);
  public final static native long Vector_String_capacity(long jarg1, Vector_String jarg1_);
  public final static native void Vector_String_reserve(long jarg1, Vector_String jarg1_, long jarg2);
  public final static native boolean Vector_String_isEmpty(long jarg1, Vector_String jarg1_);
  public final static native void Vector_String_clear(long jarg1, Vector_String jarg1_);
  public final static native long new_Vector_String__SWIG_2(int jarg1, String jarg2);
  public final static native int Vector_String_doSize(long jarg1, Vector_String jarg1_);
  public final static native void Vector_String_doAdd__SWIG_0(long jarg1, Vector_String jarg1_, String jarg2);
  public final static native void Vector_String_doAdd__SWIG_1(long jarg1, Vector_String jarg1_, int jarg2, String jarg3);
  public final static native String Vector_String_doRemove(long jarg1, Vector_String jarg1_, int jarg2);
  public final static native String Vector_String_doGet(long jarg1, Vector_String jarg1_, int jarg2);
  public final static native String Vector_String_doSet(long jarg1, Vector_String jarg1_, int jarg2, String jarg3);
  public final static native void Vector_String_doRemoveRange(long jarg1, Vector_String jarg1_, int jarg2, int jarg3);
  public final static native void delete_Vector_String(long jarg1);
  public final static native long new_Vector_Term__SWIG_0();
  public final static native long new_Vector_Term__SWIG_1(long jarg1, Vector_Term jarg1_);
  public final static native long Vector_Term_capacity(long jarg1, Vector_Term jarg1_);
  public final static native void Vector_Term_reserve(long jarg1, Vector_Term jarg1_, long jarg2);
  public final static native boolean Vector_Term_isEmpty(long jarg1, Vector_Term jarg1_);
  public final static native void Vector_Term_clear(long jarg1, Vector_Term jarg1_);
  public final static native long new_Vector_Term__SWIG_2(int jarg1, long jarg2, Term jarg2_);
  public final static native int Vector_Term_doSize(long jarg1, Vector_Term jarg1_);
  public final static native void Vector_Term_doAdd__SWIG_0(long jarg1, Vector_Term jarg1_, long jarg2, Term jarg2_);
  public final static native void Vector_Term_doAdd__SWIG_1(long jarg1, Vector_Term jarg1_, int jarg2, long jarg3, Term jarg3_);
  public final static native long Vector_Term_doRemove(long jarg1, Vector_Term jarg1_, int jarg2);
  public final static native long Vector_Term_doGet(long jarg1, Vector_Term jarg1_, int jarg2);
  public final static native long Vector_Term_doSet(long jarg1, Vector_Term jarg1_, int jarg2, long jarg3, Term jarg3_);
  public final static native void Vector_Term_doRemoveRange(long jarg1, Vector_Term jarg1_, int jarg2, int jarg3);
  public final static native void delete_Vector_Term(long jarg1);
  public final static native long new_Vector_Sort__SWIG_0();
  public final static native long new_Vector_Sort__SWIG_1(long jarg1, Vector_Sort jarg1_);
  public final static native long Vector_Sort_capacity(long jarg1, Vector_Sort jarg1_);
  public final static native void Vector_Sort_reserve(long jarg1, Vector_Sort jarg1_, long jarg2);
  public final static native boolean Vector_Sort_isEmpty(long jarg1, Vector_Sort jarg1_);
  public final static native void Vector_Sort_clear(long jarg1, Vector_Sort jarg1_);
  public final static native long new_Vector_Sort__SWIG_2(int jarg1, long jarg2, Sort jarg2_);
  public final static native int Vector_Sort_doSize(long jarg1, Vector_Sort jarg1_);
  public final static native void Vector_Sort_doAdd__SWIG_0(long jarg1, Vector_Sort jarg1_, long jarg2, Sort jarg2_);
  public final static native void Vector_Sort_doAdd__SWIG_1(long jarg1, Vector_Sort jarg1_, int jarg2, long jarg3, Sort jarg3_);
  public final static native long Vector_Sort_doRemove(long jarg1, Vector_Sort jarg1_, int jarg2);
  public final static native long Vector_Sort_doGet(long jarg1, Vector_Sort jarg1_, int jarg2);
  public final static native long Vector_Sort_doSet(long jarg1, Vector_Sort jarg1_, int jarg2, long jarg3, Sort jarg3_);
  public final static native void Vector_Sort_doRemoveRange(long jarg1, Vector_Sort jarg1_, int jarg2, int jarg3);
  public final static native void delete_Vector_Sort(long jarg1);
  public final static native long new_Map_TermTerm__SWIG_0();
  public final static native long new_Map_TermTerm__SWIG_1(long jarg1, Map_TermTerm jarg1_);
  public final static native long Map_TermTerm_Iterator_getNextUnchecked(long jarg1, Map_TermTerm.Iterator jarg1_);
  public final static native boolean Map_TermTerm_Iterator_isNot(long jarg1, Map_TermTerm.Iterator jarg1_, long jarg2, Map_TermTerm.Iterator jarg2_);
  public final static native long Map_TermTerm_Iterator_getKey(long jarg1, Map_TermTerm.Iterator jarg1_);
  public final static native long Map_TermTerm_Iterator_getValue(long jarg1, Map_TermTerm.Iterator jarg1_);
  public final static native void Map_TermTerm_Iterator_setValue(long jarg1, Map_TermTerm.Iterator jarg1_, long jarg2, Term jarg2_);
  public final static native void delete_Map_TermTerm_Iterator(long jarg1);
  public final static native boolean Map_TermTerm_isEmpty(long jarg1, Map_TermTerm jarg1_);
  public final static native void Map_TermTerm_clear(long jarg1, Map_TermTerm jarg1_);
  public final static native long Map_TermTerm_find(long jarg1, Map_TermTerm jarg1_, long jarg2, Term jarg2_);
  public final static native long Map_TermTerm_begin(long jarg1, Map_TermTerm jarg1_);
  public final static native long Map_TermTerm_end(long jarg1, Map_TermTerm jarg1_);
  public final static native int Map_TermTerm_sizeImpl(long jarg1, Map_TermTerm jarg1_);
  public final static native boolean Map_TermTerm_containsImpl(long jarg1, Map_TermTerm jarg1_, long jarg2, Term jarg2_);
  public final static native void Map_TermTerm_putUnchecked(long jarg1, Map_TermTerm jarg1_, long jarg2, Term jarg2_, long jarg3, Term jarg3_);
  public final static native void Map_TermTerm_removeUnchecked(long jarg1, Map_TermTerm jarg1_, long jarg2, Map_TermTerm.Iterator jarg2_);
  public final static native void delete_Map_TermTerm(long jarg1);
  public final static native int Result_SAT_get();
  public final static native int Result_UNSAT_get();
  public final static native int Result_UNKNOWN_get();
  public final static native int RoundingMode_RNE_get();
  public final static native int RoundingMode_RNA_get();
  public final static native int RoundingMode_RTN_get();
  public final static native int RoundingMode_RTP_get();
  public final static native int RoundingMode_RTZ_get();
  public final static native int Kind_CONSTANT_get();
  public final static native String copyright();
  public final static native String version();
  public final static native String git_id();
  public final static native long new_Options__SWIG_0();
  public final static native void delete_Options(long jarg1);
  public final static native long new_Options__SWIG_1(long jarg1, Options jarg1_);
  public final static native boolean Options_is_valid(long jarg1, Options jarg1_, String jarg2);
  public final static native boolean Options_is_bool(long jarg1, Options jarg1_, int jarg2);
  public final static native boolean Options_is_numeric(long jarg1, Options jarg1_, int jarg2);
  public final static native boolean Options_is_mode(long jarg1, Options jarg1_, int jarg2);
  public final static native String Options_shrt(long jarg1, Options jarg1_, int jarg2);
  public final static native String Options_lng(long jarg1, Options jarg1_, int jarg2);
  public final static native String Options_description(long jarg1, Options jarg1_, int jarg2);
  public final static native long Options_modes(long jarg1, Options jarg1_, int jarg2);
  public final static native int Options_option(long jarg1, Options jarg1_, String jarg2);
  public final static native void Options_set__SWIG_0(long jarg1, Options jarg1_, int jarg2, String jarg3);
  public final static native void Options_set__SWIG_1(long jarg1, Options jarg1_, String jarg2, String jarg3);
  public final static native void Options_set__SWIG_2(long jarg1, Options jarg1_, long jarg2, Vector_String jarg2_);
  public final static native java.math.BigInteger Options_get(long jarg1, Options jarg1_, int jarg2);
  public final static native String Options_get_mode(long jarg1, Options jarg1_, int jarg2);
  public final static native void Options_set__SWIG_3(long jarg1, Options jarg1_, int jarg2, int jarg3);
  public final static native long new_Term();
  public final static native void delete_Term(long jarg1);
  public final static native boolean Term_is_null(long jarg1, Term jarg1_);
  public final static native int Term_kind(long jarg1, Term jarg1_);
  public final static native long Term_sort(long jarg1, Term jarg1_);
  public final static native long Term_num_children(long jarg1, Term jarg1_);
  public final static native long Term_children(long jarg1, Term jarg1_);
  public final static native long Term_get(long jarg1, Term jarg1_, long jarg2);
  public final static native long Term_num_indices(long jarg1, Term jarg1_);
  public final static native boolean Term_is_const(long jarg1, Term jarg1_);
  public final static native boolean Term_is_variable(long jarg1, Term jarg1_);
  public final static native boolean Term_is_value(long jarg1, Term jarg1_);
  public final static native boolean Term_is_true(long jarg1, Term jarg1_);
  public final static native boolean Term_is_false(long jarg1, Term jarg1_);
  public final static native boolean Term_is_bv_value_zero(long jarg1, Term jarg1_);
  public final static native boolean Term_is_bv_value_one(long jarg1, Term jarg1_);
  public final static native boolean Term_is_bv_value_ones(long jarg1, Term jarg1_);
  public final static native boolean Term_is_bv_value_min_signed(long jarg1, Term jarg1_);
  public final static native boolean Term_is_bv_value_max_signed(long jarg1, Term jarg1_);
  public final static native boolean Term_is_fp_value_pos_zero(long jarg1, Term jarg1_);
  public final static native boolean Term_is_fp_value_neg_zero(long jarg1, Term jarg1_);
  public final static native boolean Term_is_fp_value_pos_inf(long jarg1, Term jarg1_);
  public final static native boolean Term_is_fp_value_neg_inf(long jarg1, Term jarg1_);
  public final static native boolean Term_is_fp_value_nan(long jarg1, Term jarg1_);
  public final static native boolean Term_is_rm_value_rna(long jarg1, Term jarg1_);
  public final static native boolean Term_is_rm_value_rne(long jarg1, Term jarg1_);
  public final static native boolean Term_is_rm_value_rtn(long jarg1, Term jarg1_);
  public final static native boolean Term_is_rm_value_rtp(long jarg1, Term jarg1_);
  public final static native boolean Term_is_rm_value_rtz(long jarg1, Term jarg1_);
  public final static native String Term_toString__SWIG_0(long jarg1, Term jarg1_, short jarg2);
  public final static native String Term_toString__SWIG_1(long jarg1, Term jarg1_);
  public final static native int Term_id(long jarg1, Term jarg1_);
  public final static native long Term_indices(long jarg1, Term jarg1_);
  public final static native String Term_symbol(long jarg1, Term jarg1_);
  public final static native boolean Term_to_bool(long jarg1, Term jarg1_);
  public final static native int Term_to_rm(long jarg1, Term jarg1_);
  public final static native String Term_to_bv(long jarg1, Term jarg1_);
  public final static native int Term_hashCode(long jarg1, Term jarg1_);
  public final static native boolean Term_isEqual(long jarg1, Term jarg1_, long jarg2, Term jarg2_);
  public final static native long new_Sort();
  public final static native void delete_Sort(long jarg1);
  public final static native boolean Sort_is_null(long jarg1, Sort jarg1_);
  public final static native long Sort_array_index(long jarg1, Sort jarg1_);
  public final static native long Sort_array_element(long jarg1, Sort jarg1_);
  public final static native long Sort_fun_domain(long jarg1, Sort jarg1_);
  public final static native long Sort_fun_codomain(long jarg1, Sort jarg1_);
  public final static native boolean Sort_is_array(long jarg1, Sort jarg1_);
  public final static native boolean Sort_is_bool(long jarg1, Sort jarg1_);
  public final static native boolean Sort_is_bv(long jarg1, Sort jarg1_);
  public final static native boolean Sort_is_fp(long jarg1, Sort jarg1_);
  public final static native boolean Sort_is_fun(long jarg1, Sort jarg1_);
  public final static native boolean Sort_is_rm(long jarg1, Sort jarg1_);
  public final static native String Sort_toString(long jarg1, Sort jarg1_);
  public final static native int Sort_id(long jarg1, Sort jarg1_);
  public final static native int Sort_bv_size(long jarg1, Sort jarg1_);
  public final static native int Sort_fp_exp_size(long jarg1, Sort jarg1_);
  public final static native int Sort_fp_sig_size(long jarg1, Sort jarg1_);
  public final static native int Sort_fun_arity(long jarg1, Sort jarg1_);
  public final static native int Sort_hashCode(long jarg1, Sort jarg1_);
  public final static native boolean Sort_isEqual(long jarg1, Sort jarg1_, long jarg2, Sort jarg2_);
  public final static native void delete_Terminator(long jarg1);
  public final static native boolean Terminator_terminate(long jarg1, Terminator jarg1_);
  public final static native long new_Terminator();
  public final static native void Terminator_director_connect(Terminator obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Terminator_change_ownership(Terminator obj, long cptr, boolean take_or_release);
  public final static native long new_TermManager();
  public final static native void delete_TermManager(long jarg1);
  public final static native long TermManager_mk_array_sort(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, long jarg3, Sort jarg3_);
  public final static native long TermManager_mk_bool_sort(long jarg1, TermManager jarg1_);
  public final static native long TermManager_mk_fun_sort(long jarg1, TermManager jarg1_, long jarg2, Vector_Sort jarg2_, long jarg3, Sort jarg3_);
  public final static native long TermManager_mk_true(long jarg1, TermManager jarg1_);
  public final static native long TermManager_mk_false(long jarg1, TermManager jarg1_);
  public final static native long TermManager_mk_bv_zero(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_bv_one(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_bv_ones(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_bv_min_signed(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_bv_max_signed(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_bv_value__SWIG_0(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, String jarg3, short jarg4);
  public final static native long TermManager_mk_bv_value__SWIG_1(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, String jarg3);
  public final static native long TermManager_mk_bv_value_uint64(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, java.math.BigInteger jarg3);
  public final static native long TermManager_mk_bv_value_int64(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, long jarg3);
  public final static native long TermManager_mk_fp_pos_zero(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_fp_neg_zero(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_fp_pos_inf(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_fp_neg_inf(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_fp_nan(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_);
  public final static native long TermManager_mk_fp_value__SWIG_0(long jarg1, TermManager jarg1_, long jarg2, Term jarg2_, long jarg3, Term jarg3_, long jarg4, Term jarg4_);
  public final static native long TermManager_mk_fp_value__SWIG_1(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, long jarg3, Term jarg3_, String jarg4);
  public final static native long TermManager_mk_fp_value__SWIG_2(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, long jarg3, Term jarg3_, String jarg4, String jarg5);
  public final static native long TermManager_mk_const_array(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, long jarg3, Term jarg3_);
  public final static native long TermManager_mk_rm_value(long jarg1, TermManager jarg1_, int jarg2);
  public final static native long TermManager_substitute_term(long jarg1, TermManager jarg1_, long jarg2, Term jarg2_, long jarg3, Map_TermTerm jarg3_);
  public final static native void TermManager_substitute_terms(long jarg1, TermManager jarg1_, long jarg2, Vector_Term jarg2_, long jarg3, Map_TermTerm jarg3_);
  public final static native long TermManager_mk_bv_sort(long jarg1, TermManager jarg1_, int jarg2);
  public final static native long TermManager_mk_fp_sort(long jarg1, TermManager jarg1_, int jarg2, int jarg3);
  public final static native long TermManager_mk_term__SWIG_0(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_);
  public final static native long TermManager_mk_term__SWIG_1(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_, int jarg4);
  public final static native long TermManager_mk_term__SWIG_2(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_, int jarg4, int jarg5);
  public final static native long TermManager_mk_term__SWIG_3(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_, long jarg4, Term jarg4_);
  public final static native long TermManager_mk_term__SWIG_4(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_, long jarg4, Term jarg4_, int jarg5);
  public final static native long TermManager_mk_term__SWIG_5(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_, long jarg4, Term jarg4_, int jarg5, int jarg6);
  public final static native long TermManager_mk_term__SWIG_6(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Term jarg3_, long jarg4, Term jarg4_, long jarg5, Term jarg5_);
  public final static native long TermManager_mk_term__SWIG_7(long jarg1, TermManager jarg1_, int jarg2, long jarg3, Vector_Term jarg3_, long jarg4, Vector_Int jarg4_);
  public final static native long TermManager_mk_const(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, String jarg3);
  public final static native long TermManager_mk_var(long jarg1, TermManager jarg1_, long jarg2, Sort jarg2_, String jarg3);
  public final static native long new_Bitwuzla__SWIG_0(long jarg1, TermManager jarg1_, long jarg2, Options jarg2_);
  public final static native long new_Bitwuzla__SWIG_1(long jarg1, TermManager jarg1_);
  public final static native void delete_Bitwuzla(long jarg1);
  public final static native void Bitwuzla_configure_terminator(long jarg1, Bitwuzla jarg1_, long jarg2, Terminator jarg2_);
  public final static native void Bitwuzla_push(long jarg1, Bitwuzla jarg1_, long jarg2);
  public final static native void Bitwuzla_pop(long jarg1, Bitwuzla jarg1_, long jarg2);
  public final static native void Bitwuzla_assert_formula(long jarg1, Bitwuzla jarg1_, long jarg2, Term jarg2_);
  public final static native long Bitwuzla_get_assertions(long jarg1, Bitwuzla jarg1_);
  public final static native long Bitwuzla_get_unsat_assumptions(long jarg1, Bitwuzla jarg1_);
  public final static native long Bitwuzla_get_unsat_core(long jarg1, Bitwuzla jarg1_);
  public final static native int Bitwuzla_check_sat__SWIG_0(long jarg1, Bitwuzla jarg1_, long jarg2, Vector_Term jarg2_);
  public final static native int Bitwuzla_check_sat__SWIG_1(long jarg1, Bitwuzla jarg1_);
  public final static native long Bitwuzla_get_value(long jarg1, Bitwuzla jarg1_, long jarg2, Term jarg2_);
  public final static native long Bitwuzla_term_mgr(long jarg1, Bitwuzla jarg1_);
  public final static native String Bitwuzla_print_formula(long jarg1, Bitwuzla jarg1_);
  public final static native long new_Parser__SWIG_0(long jarg1, TermManager jarg1_, long jarg2, Options jarg2_, String jarg3);
  public final static native long new_Parser__SWIG_1(long jarg1, TermManager jarg1_, long jarg2, Options jarg2_);
  public final static native void delete_Parser(long jarg1);
  public final static native void Parser_parse__SWIG_0(long jarg1, Parser jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native void Parser_parse__SWIG_1(long jarg1, Parser jarg1_, String jarg2, boolean jarg3);
  public final static native void Parser_parse__SWIG_2(long jarg1, Parser jarg1_, String jarg2);
  public final static native long Parser_parse_term(long jarg1, Parser jarg1_, String jarg2);
  public final static native long Parser_parse_sort(long jarg1, Parser jarg1_, String jarg2);
  public final static native long Parser_get_declared_sorts(long jarg1, Parser jarg1_);
  public final static native long Parser_get_declared_funs(long jarg1, Parser jarg1_);
  public final static native long Parser_bitwuzla(long jarg1, Parser jarg1_);

  public static boolean SwigDirector_Terminator_terminate(Terminator jself) {
    return jself.terminate();
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
