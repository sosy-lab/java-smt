// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2025 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt.solvers.opensmt.api;

public class SSymRef {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SSymRef(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SSymRef obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(SSymRef obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmtNativeJNI.delete_SSymRef(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean equals(Object object) {
    if(object instanceof SSymRef) {
      SSymRef that = (SSymRef) object;
      return this.getX() == that.getX();
    }
    return false;
  }

  public int hashCode() {
    return Long.hashCode(this.getX());
  }

  public void setX(long value) {
    OsmtNativeJNI.SSymRef_x_set(swigCPtr, this, value);
  }

  public long getX() {
    return OsmtNativeJNI.SSymRef_x_get(swigCPtr, this);
  }

}
