// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2025 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt.solvers.opensmt.api;

public class OsmtNativeJNI {
  public final static native long new_VectorInt__SWIG_0();
  public final static native long new_VectorInt__SWIG_1(long jarg1, VectorInt jarg1_);
  public final static native long VectorInt_capacity(long jarg1, VectorInt jarg1_);
  public final static native void VectorInt_reserve(long jarg1, VectorInt jarg1_, long jarg2);
  public final static native boolean VectorInt_isEmpty(long jarg1, VectorInt jarg1_);
  public final static native void VectorInt_clear(long jarg1, VectorInt jarg1_);
  public final static native long new_VectorInt__SWIG_2(int jarg1, int jarg2);
  public final static native int VectorInt_doSize(long jarg1, VectorInt jarg1_);
  public final static native void VectorInt_doAdd__SWIG_0(long jarg1, VectorInt jarg1_, int jarg2);
  public final static native void VectorInt_doAdd__SWIG_1(long jarg1, VectorInt jarg1_, int jarg2, int jarg3);
  public final static native int VectorInt_doRemove(long jarg1, VectorInt jarg1_, int jarg2);
  public final static native int VectorInt_doGet(long jarg1, VectorInt jarg1_, int jarg2);
  public final static native int VectorInt_doSet(long jarg1, VectorInt jarg1_, int jarg2, int jarg3);
  public final static native void VectorInt_doRemoveRange(long jarg1, VectorInt jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorInt(long jarg1);
  public final static native long new_VectorPTRef__SWIG_0();
  public final static native long new_VectorPTRef__SWIG_1(long jarg1, VectorPTRef jarg1_);
  public final static native long VectorPTRef_capacity(long jarg1, VectorPTRef jarg1_);
  public final static native void VectorPTRef_reserve(long jarg1, VectorPTRef jarg1_, long jarg2);
  public final static native boolean VectorPTRef_isEmpty(long jarg1, VectorPTRef jarg1_);
  public final static native void VectorPTRef_clear(long jarg1, VectorPTRef jarg1_);
  public final static native long new_VectorPTRef__SWIG_2(int jarg1, long jarg2, PTRef jarg2_);
  public final static native int VectorPTRef_doSize(long jarg1, VectorPTRef jarg1_);
  public final static native void VectorPTRef_doAdd__SWIG_0(long jarg1, VectorPTRef jarg1_, long jarg2, PTRef jarg2_);
  public final static native void VectorPTRef_doAdd__SWIG_1(long jarg1, VectorPTRef jarg1_, int jarg2, long jarg3, PTRef jarg3_);
  public final static native long VectorPTRef_doRemove(long jarg1, VectorPTRef jarg1_, int jarg2);
  public final static native long VectorPTRef_doGet(long jarg1, VectorPTRef jarg1_, int jarg2);
  public final static native long VectorPTRef_doSet(long jarg1, VectorPTRef jarg1_, int jarg2, long jarg3, PTRef jarg3_);
  public final static native void VectorPTRef_doRemoveRange(long jarg1, VectorPTRef jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorPTRef(long jarg1);
  public final static native long new_VectorSRef__SWIG_0();
  public final static native long new_VectorSRef__SWIG_1(long jarg1, VectorSRef jarg1_);
  public final static native long VectorSRef_capacity(long jarg1, VectorSRef jarg1_);
  public final static native void VectorSRef_reserve(long jarg1, VectorSRef jarg1_, long jarg2);
  public final static native boolean VectorSRef_isEmpty(long jarg1, VectorSRef jarg1_);
  public final static native void VectorSRef_clear(long jarg1, VectorSRef jarg1_);
  public final static native long new_VectorSRef__SWIG_2(int jarg1, long jarg2, SRef jarg2_);
  public final static native int VectorSRef_doSize(long jarg1, VectorSRef jarg1_);
  public final static native void VectorSRef_doAdd__SWIG_0(long jarg1, VectorSRef jarg1_, long jarg2, SRef jarg2_);
  public final static native void VectorSRef_doAdd__SWIG_1(long jarg1, VectorSRef jarg1_, int jarg2, long jarg3, SRef jarg3_);
  public final static native long VectorSRef_doRemove(long jarg1, VectorSRef jarg1_, int jarg2);
  public final static native long VectorSRef_doGet(long jarg1, VectorSRef jarg1_, int jarg2);
  public final static native long VectorSRef_doSet(long jarg1, VectorSRef jarg1_, int jarg2, long jarg3, SRef jarg3_);
  public final static native void VectorSRef_doRemoveRange(long jarg1, VectorSRef jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorSRef(long jarg1);
  public final static native long new_VectorSymRef__SWIG_0();
  public final static native long new_VectorSymRef__SWIG_1(long jarg1, VectorSymRef jarg1_);
  public final static native long VectorSymRef_capacity(long jarg1, VectorSymRef jarg1_);
  public final static native void VectorSymRef_reserve(long jarg1, VectorSymRef jarg1_, long jarg2);
  public final static native boolean VectorSymRef_isEmpty(long jarg1, VectorSymRef jarg1_);
  public final static native void VectorSymRef_clear(long jarg1, VectorSymRef jarg1_);
  public final static native long new_VectorSymRef__SWIG_2(int jarg1, long jarg2, SymRef jarg2_);
  public final static native int VectorSymRef_doSize(long jarg1, VectorSymRef jarg1_);
  public final static native void VectorSymRef_doAdd__SWIG_0(long jarg1, VectorSymRef jarg1_, long jarg2, SymRef jarg2_);
  public final static native void VectorSymRef_doAdd__SWIG_1(long jarg1, VectorSymRef jarg1_, int jarg2, long jarg3, SymRef jarg3_);
  public final static native long VectorSymRef_doRemove(long jarg1, VectorSymRef jarg1_, int jarg2);
  public final static native long VectorSymRef_doGet(long jarg1, VectorSymRef jarg1_, int jarg2);
  public final static native long VectorSymRef_doSet(long jarg1, VectorSymRef jarg1_, int jarg2, long jarg3, SymRef jarg3_);
  public final static native void VectorSymRef_doRemoveRange(long jarg1, VectorSymRef jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorSymRef(long jarg1);
  public final static native long new_VectorVectorInt__SWIG_0();
  public final static native long new_VectorVectorInt__SWIG_1(long jarg1, VectorVectorInt jarg1_);
  public final static native long VectorVectorInt_capacity(long jarg1, VectorVectorInt jarg1_);
  public final static native void VectorVectorInt_reserve(long jarg1, VectorVectorInt jarg1_, long jarg2);
  public final static native boolean VectorVectorInt_isEmpty(long jarg1, VectorVectorInt jarg1_);
  public final static native void VectorVectorInt_clear(long jarg1, VectorVectorInt jarg1_);
  public final static native long new_VectorVectorInt__SWIG_2(int jarg1, long jarg2, VectorInt jarg2_);
  public final static native int VectorVectorInt_doSize(long jarg1, VectorVectorInt jarg1_);
  public final static native void VectorVectorInt_doAdd__SWIG_0(long jarg1, VectorVectorInt jarg1_, long jarg2, VectorInt jarg2_);
  public final static native void VectorVectorInt_doAdd__SWIG_1(long jarg1, VectorVectorInt jarg1_, int jarg2, long jarg3, VectorInt jarg3_);
  public final static native long VectorVectorInt_doRemove(long jarg1, VectorVectorInt jarg1_, int jarg2);
  public final static native long VectorVectorInt_doGet(long jarg1, VectorVectorInt jarg1_, int jarg2);
  public final static native long VectorVectorInt_doSet(long jarg1, VectorVectorInt jarg1_, int jarg2, long jarg3, VectorInt jarg3_);
  public final static native void VectorVectorInt_doRemoveRange(long jarg1, VectorVectorInt jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorVectorInt(long jarg1);
  public final static native void PTRef_x_set(long jarg1, PTRef jarg1_, long jarg2);
  public final static native long PTRef_x_get(long jarg1, PTRef jarg1_);
  public final static native long PTRef_Undef_get();
  public final static native void delete_PTRef(long jarg1);
  public final static native void SSymRef_x_set(long jarg1, SSymRef jarg1_, long jarg2);
  public final static native long SSymRef_x_get(long jarg1, SSymRef jarg1_);
  public final static native void delete_SSymRef(long jarg1);
  public final static native boolean SortSymbol_isInternal(long jarg1, SortSymbol jarg1_);
  public final static native long SortSymbol_getArity(long jarg1, SortSymbol jarg1_);
  public final static native String SortSymbol_getName(long jarg1, SortSymbol jarg1_);
  public final static native void delete_SortSymbol(long jarg1);
  public final static native void SRef_x_set(long jarg1, SRef jarg1_, long jarg2);
  public final static native long SRef_x_get(long jarg1, SRef jarg1_);
  public final static native void delete_SRef(long jarg1);
  public final static native long Sort_getSymRef(long jarg1, Sort jarg1_);
  public final static native long Sort_getSize(long jarg1, Sort jarg1_);
  public final static native long Sort_getArgs(long jarg1, Sort jarg1_);
  public final static native void delete_Sort(long jarg1);
  public final static native int Symbol_size(long jarg1, Symbol jarg1_);
  public final static native long Symbol_rsort(long jarg1, Symbol jarg1_);
  public final static native boolean Symbol_isInterpreted(long jarg1, Symbol jarg1_);
  public final static native long Symbol_getArgTypes(long jarg1, Symbol jarg1_);
  public final static native void delete_Symbol(long jarg1);
  public final static native void SymRef_x_set(long jarg1, SymRef jarg1_, long jarg2);
  public final static native long SymRef_x_get(long jarg1, SymRef jarg1_);
  public final static native void delete_SymRef(long jarg1);
  public final static native void delete_InterpolationContext(long jarg1);
  public final static native long InterpolationContext_getSingleInterpolant(long jarg1, InterpolationContext jarg1_, long jarg2, VectorInt jarg2_);
  public final static native long InterpolationContext_getPathInterpolants(long jarg1, InterpolationContext jarg1_, long jarg2, VectorVectorInt jarg2_);
  public final static native int getLogicFromString(long jarg1);
  public final static native long LogicFactory_getInstance(int jarg1);
  public final static native long LogicFactory_getLAInstance(int jarg1);
  public final static native long LogicFactory_getLRAInstance();
  public final static native long LogicFactory_getLIAInstance();
  public final static native String LogicFactory_getVersion();
  public final static native void delete_LogicFactory(long jarg1);
  public final static native long new_SMTOption__SWIG_0(int jarg1);
  public final static native long new_SMTOption__SWIG_1(double jarg1);
  public final static native long new_SMTOption__SWIG_2(String jarg1);
  public final static native boolean SMTOption_isEmpty(long jarg1, SMTOption jarg1_);
  public final static native String SMTOption_toString(long jarg1, SMTOption jarg1_);
  public final static native long new_SMTOption__SWIG_3(boolean jarg1);
  public final static native void delete_SMTOption(long jarg1);
  public final static native void SMTConfig_o_produce_unsat_cores_set(String jarg1);
  public final static native String SMTConfig_o_produce_unsat_cores_get();
  public final static native void SMTConfig_o_minimal_unsat_cores_set(String jarg1);
  public final static native String SMTConfig_o_minimal_unsat_cores_get();
  public final static native void SMTConfig_o_print_cores_full_set(String jarg1);
  public final static native String SMTConfig_o_print_cores_full_get();
  public final static native long new_SMTConfig__SWIG_0();
  public final static native void delete_SMTConfig(long jarg1);
  public final static native long new_SMTConfig__SWIG_1(long jarg1, SMTConfig jarg1_);
  public final static native void SMTConfig_setProduceProofs(long jarg1, SMTConfig jarg1_);
  public final static native boolean SMTConfig_produce_unsat_cores(long jarg1, SMTConfig jarg1_);
  public final static native boolean SMTConfig_minimal_unsat_cores(long jarg1, SMTConfig jarg1_);
  public final static native boolean SMTConfig_print_cores_full(long jarg1, SMTConfig jarg1_);
  public final static native boolean SMTConfig_produce_proof(long jarg1, SMTConfig jarg1_);
  public final static native void SMTConfig_setOption(long jarg1, SMTConfig jarg1_, String jarg2, long jarg3, SMTOption jarg3_);
  public final static native String TemplateFunction_getName(long jarg1, TemplateFunction jarg1_);
  public final static native long TemplateFunction_getRetSort(long jarg1, TemplateFunction jarg1_);
  public final static native long TemplateFunction_getBody(long jarg1, TemplateFunction jarg1_);
  public final static native long new_TemplateFunction(String jarg1, long jarg2, VectorPTRef jarg2_, long jarg3, SRef jarg3_, long jarg4, PTRef jarg4_);
  public final static native long TemplateFunction_getArgs(long jarg1, TemplateFunction jarg1_);
  public final static native void delete_TemplateFunction(long jarg1);
  public final static native int Pterm_size(long jarg1, Pterm jarg1_);
  public final static native long Pterm_symb(long jarg1, Pterm jarg1_);
  public final static native long Pterm_at(long jarg1, Pterm jarg1_, int jarg2);
  public final static native void delete_Pterm(long jarg1);
  public final static native long Model_evaluate(long jarg1, Model jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Model_getDefinition(long jarg1, Model jarg1_, long jarg2, SymRef jarg2_);
  public final static native void delete_Model(long jarg1);
  public final static native char sstat_getValue(long jarg1, sstat jarg1_);
  public final static native long sstat_True();
  public final static native long sstat_False();
  public final static native long sstat_Undef();
  public final static native long sstat_Error();
  public final static native void delete_sstat(long jarg1);
  public final static native long new_MainSolver__SWIG_0(long jarg1, Logic jarg1_, long jarg2, SMTConfig jarg2_, String jarg3);
  public final static native void delete_MainSolver(long jarg1);
  public final static native long new_MainSolver__SWIG_1(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getConfig(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getLogic(long jarg1, MainSolver jarg1_);
  public final static native void MainSolver_push(long jarg1, MainSolver jarg1_);
  public final static native boolean MainSolver_pop(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getAssertionLevel(long jarg1, MainSolver jarg1_);
  public final static native void MainSolver_insertFormula(long jarg1, MainSolver jarg1_, long jarg2, PTRef jarg2_);
  public final static native long MainSolver_getInsertedFormulasCount(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_check(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_solve(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getStatus(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getModel(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getInterpolationContext(long jarg1, MainSolver jarg1_);
  public final static native void MainSolver_stop(long jarg1, MainSolver jarg1_);
  public final static native long MainSolver_getUnsatCore(long jarg1, MainSolver jarg1_);
  public final static native long new_Logic__SWIG_0(int jarg1);
  public final static native void delete_Logic(long jarg1);
  public final static native long new_Logic__SWIG_1(long jarg1, Logic jarg1_);
  public final static native long Logic_getSortDefinition(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_);
  public final static native long Logic_getSortSymbol(long jarg1, Logic jarg1_, long jarg2, SSymRef jarg2_);
  public final static native long Logic_getSortRef(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native String Logic_printSort(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_);
  public final static native long Logic_declareUninterpretedSort(long jarg1, Logic jarg1_, String jarg2);
  public final static native boolean Logic_isArraySort(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_);
  public final static native long Logic_getArraySort(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_, long jarg3, SRef jarg3_);
  public final static native boolean Logic_isArrayStore(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isArraySelect(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Logic_getSym(long jarg1, Logic jarg1_, long jarg2, SymRef jarg2_);
  public final static native long Logic_getSymRef(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native String Logic_getSymName(long jarg1, Logic jarg1_, long jarg2, SymRef jarg2_);
  public final static native long Logic_getPterm(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Logic_mkAnd__SWIG_0(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkOr__SWIG_0(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkXor(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkImpl__SWIG_0(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkNot(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Logic_mkIte(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_, long jarg4, PTRef jarg4_);
  public final static native long Logic_mkEq__SWIG_0(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_mkVar__SWIG_0(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_, String jarg3, boolean jarg4);
  public final static native long Logic_mkVar__SWIG_1(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_, String jarg3);
  public final static native long Logic_mkConst(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_, String jarg3);
  public final static native long Logic_mkBoolVar(long jarg1, Logic jarg1_, String jarg2);
  public final static native String Logic_dumpWithLets(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Logic_parseFormula(long jarg1, Logic jarg1_, String jarg2);
  public final static native long Logic_getSort_bool(long jarg1, Logic jarg1_);
  public final static native long Logic_getTerm_true(long jarg1, Logic jarg1_);
  public final static native long Logic_getTerm_false(long jarg1, Logic jarg1_);
  public final static native boolean Logic_isEquality(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isDisequality(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isIte(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isConstant(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isVar(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isUF(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isAnd(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isOr(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isNot(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isXor(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isImplies(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isTrue(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isFalse(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean Logic_isIff(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native String Logic_protectName(long jarg1, Logic jarg1_, long jarg2, SymRef jarg2_);
  public final static native String Logic_pp(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long Logic_mkStore(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_, long jarg4, PTRef jarg4_);
  public final static native long Logic_mkSelect(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_getDefaultValue(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_);
  public final static native long Logic_mkUninterpFun(long jarg1, Logic jarg1_, long jarg2, SymRef jarg2_, long jarg3, VectorPTRef jarg3_);
  public final static native long Logic_mkAnd__SWIG_1(long jarg1, Logic jarg1_, long jarg2, VectorPTRef jarg2_);
  public final static native long Logic_mkOr__SWIG_1(long jarg1, Logic jarg1_, long jarg2, VectorPTRef jarg2_);
  public final static native long Logic_mkImpl__SWIG_1(long jarg1, Logic jarg1_, long jarg2, VectorPTRef jarg2_);
  public final static native long Logic_mkEq__SWIG_1(long jarg1, Logic jarg1_, long jarg2, VectorPTRef jarg2_);
  public final static native long Logic_mkDistinct__SWIG_0(long jarg1, Logic jarg1_, long jarg2, VectorPTRef jarg2_);
  public final static native long Logic_mkDistinct__SWIG_1(long jarg1, Logic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long Logic_declareFun(long jarg1, Logic jarg1_, String jarg2, long jarg3, SRef jarg3_, long jarg4, VectorSRef jarg4_);
  public final static native long Logic_instantiateFunctionTemplate(long jarg1, Logic jarg1_, long jarg2, TemplateFunction jarg2_, long jarg3, VectorPTRef jarg3_);
  public final static native boolean Logic_isSortBool(long jarg1, Logic jarg1_, long jarg2, SRef jarg2_);
  public final static native long Logic_insertTerm(long jarg1, Logic jarg1_, long jarg2, SymRef jarg2_, long jarg3, VectorPTRef jarg3_);
  public final static native void delete_ArithLogic(long jarg1);
  public final static native long new_ArithLogic(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getSort_real(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getSort_int(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_mkConst(long jarg1, ArithLogic jarg1_, long jarg2, SRef jarg2_, String jarg3);
  public final static native long ArithLogic_mkIntVar(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native long ArithLogic_mkRealVar(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native boolean ArithLogic_isNumConst(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isIntConst(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isRealConst(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isSortInt(long jarg1, ArithLogic jarg1_, long jarg2, SRef jarg2_);
  public final static native boolean ArithLogic_isSortReal(long jarg1, ArithLogic jarg1_, long jarg2, SRef jarg2_);
  public final static native boolean ArithLogic_isPlus(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isNeg(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isTimes(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isLeq(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isLt(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isGeq(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isGt(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long ArithLogic_getTerm_IntZero(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getTerm_RealZero(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getTerm_IntOne(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getTerm_RealOne(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getTerm_IntMinusOne(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_getTerm_RealMinusOne(long jarg1, ArithLogic jarg1_);
  public final static native long ArithLogic_mkNeg(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long ArithLogic_mkMinus(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkPlus(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkTimes(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkIntDiv(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkRealDiv(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkMod(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkLeq(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkGeq(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkLt(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkGt(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_, long jarg3, PTRef jarg3_);
  public final static native long ArithLogic_mkIntConst(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native long ArithLogic_mkRealConst(long jarg1, ArithLogic jarg1_, String jarg2);
  public final static native String ArithLogic_getNumConst(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isMinus(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isDiv(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native boolean ArithLogic_isMod(long jarg1, ArithLogic jarg1_, long jarg2, PTRef jarg2_);
  public final static native long ArithLogic_SWIGUpcast(long jarg1);
}
