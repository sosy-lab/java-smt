// This file is part of JavaSMT,
// an API wrapper for a collection of SMT solvers:
// https://github.com/sosy-lab/java-smt
//
// SPDX-FileCopyrightText: 2025 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sosy_lab.java_smt.solvers.opensmt.api;

public final class Logic_t {
  public final static Logic_t UNDEF = new Logic_t("UNDEF");
  public final static Logic_t EMPTY = new Logic_t("EMPTY");
  public final static Logic_t QF_UF = new Logic_t("QF_UF");
  public final static Logic_t QF_BV = new Logic_t("QF_BV");
  public final static Logic_t QF_RDL = new Logic_t("QF_RDL");
  public final static Logic_t QF_IDL = new Logic_t("QF_IDL");
  public final static Logic_t QF_LRA = new Logic_t("QF_LRA");
  public final static Logic_t QF_LIA = new Logic_t("QF_LIA");
  public final static Logic_t QF_NIA = new Logic_t("QF_NIA");
  public final static Logic_t QF_NRA = new Logic_t("QF_NRA");
  public final static Logic_t QF_LIRA = new Logic_t("QF_LIRA");
  public final static Logic_t QF_NIRA = new Logic_t("QF_NIRA");
  public final static Logic_t QF_UFRDL = new Logic_t("QF_UFRDL");
  public final static Logic_t QF_UFIDL = new Logic_t("QF_UFIDL");
  public final static Logic_t QF_UFLRA = new Logic_t("QF_UFLRA");
  public final static Logic_t QF_UFLIA = new Logic_t("QF_UFLIA");
  public final static Logic_t QF_UFBV = new Logic_t("QF_UFBV");
  public final static Logic_t QF_AX = new Logic_t("QF_AX");
  public final static Logic_t QF_AXDIFF = new Logic_t("QF_AXDIFF");
  public final static Logic_t QF_ALRA = new Logic_t("QF_ALRA");
  public final static Logic_t QF_ALIA = new Logic_t("QF_ALIA");
  public final static Logic_t QF_AUFLRA = new Logic_t("QF_AUFLRA");
  public final static Logic_t QF_AUFLIA = new Logic_t("QF_AUFLIA");
  public final static Logic_t QF_BOOL = new Logic_t("QF_BOOL");
  public final static Logic_t QF_AUFBV = new Logic_t("QF_AUFBV");
  public final static Logic_t QF_AUFLIRA = new Logic_t("QF_AUFLIRA");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static Logic_t swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + Logic_t.class + " with value " + swigValue);
  }

  private Logic_t(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private Logic_t(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private Logic_t(String swigName, Logic_t swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static Logic_t[] swigValues = { UNDEF, EMPTY, QF_UF, QF_BV, QF_RDL, QF_IDL, QF_LRA, QF_LIA, QF_NIA, QF_NRA, QF_LIRA, QF_NIRA, QF_UFRDL, QF_UFIDL, QF_UFLRA, QF_UFLIA, QF_UFBV, QF_AX, QF_AXDIFF, QF_ALRA, QF_ALIA, QF_AUFLRA, QF_AUFLIA, QF_BOOL, QF_AUFBV, QF_AUFLIRA };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

