<?xml version="1.0" encoding="UTF-8" ?>

<!--
This file is part of JavaSMT,
an API wrapper for a collection of SMT solvers:
https://github.com/sosy-lab/java-smt

SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab sts=4 filetype=ant fdm=marker: -->
<project name="publish-solvers-cvc5" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <import file="macros.xml"/>

    <property name="cvc5.url" value="https://github.com/cvc5/cvc5/releases/download/latest"/>
    <property name="cvc5.downloads" value="./downloads/cvc5"/>
    <property name="cvc5.distDir" value="${ivy.solver.dist.dir}/cvc5"/>

    <target name="download-cvc5">
        <fail unless="cvc5.version">
            Please specify a version with the flag -Dcvc5.version=XXX.
            The version must match one of the daily builds from https://github.com/cvc5/cvc5/releases
        </fail>

        <mkdir dir="${cvc5.downloads}"/>
        <mkdir dir="${cvc5.distDir}/x64"/>
        <mkdir dir="${cvc5.distDir}/arm64"/>

        <!-- Download binaries for Linux on x64 -->
        <get src="${cvc5.url}/cvc5-Linux-x86_64-static-${cvc5.version}.zip" dest="${cvc5.downloads}" verbose="true"/>
        <unzip src="${cvc5.downloads}/cvc5-Linux-x86_64-static-${cvc5.version}.zip" dest="${cvc5.distDir}/x64">
            <patternset><include name="cvc5-Linux-x86_64-static/lib/libcvc5jni.so"/></patternset>
            <mapper type="merge" to="libcvc5jni-${cvc5.version}.so"/>
        </unzip>

        <!-- Download binaries for Linux on arm64 -->
        <get src="${cvc5.url}/cvc5-Linux-arm64-static-${cvc5.version}.zip" dest="${cvc5.downloads}" verbose="true"/>
        <unzip src="${cvc5.downloads}/cvc5-Linux-arm64-static-${cvc5.version}.zip" dest="${cvc5.distDir}/arm64">
            <patternset><include name="cvc5-Linux-arm64-static/lib/libcvc5jni.so"/></patternset>
            <mapper type="merge" to="libcvc5jni-${cvc5.version}.so"/>
        </unzip>

        <!-- Download binaries for macOS on x64 -->
        <get src="${cvc5.url}/cvc5-macOS-x86_64-static-${cvc5.version}.zip" dest="${cvc5.downloads}" verbose="true"/>
        <unzip src="${cvc5.downloads}/cvc5-macOS-x86_64-static-${cvc5.version}.zip" dest="${cvc5.distDir}/x64">
            <patternset><include name="cvc5-macOS-x86_64-static/lib/libcvc5jni.dylib"/></patternset>
            <mapper type="merge" to="libcvc5jni-${cvc5.version}.dylib"/>
        </unzip>

        <!-- Download binaries for macOS on arm64 -->
        <get src="${cvc5.url}/cvc5-macOS-arm64-static-${cvc5.version}.zip" dest="${cvc5.downloads}" verbose="true"/>
        <unzip src="${cvc5.downloads}/cvc5-macOS-arm64-static-${cvc5.version}.zip" dest="${cvc5.distDir}/arm64">
            <patternset><include name="cvc5-macOS-arm64-static/lib/libcvc5jni.dylib"/></patternset>
            <mapper type="merge" to="libcvc5jni-${cvc5.version}.dylib"/>
        </unzip>

        <!-- Download binaries for Windows on x64 -->
        <get src="${cvc5.url}/cvc5-Win64-x86_64-static-${cvc5.version}.zip" dest="${cvc5.downloads}" verbose="true"/>
        <unzip src="${cvc5.downloads}/cvc5-Win64-x86_64-static-${cvc5.version}.zip" dest="${cvc5.distDir}/x64">
            <patternset><include name="cvc5-Win64-x86_64-static/bin/cvc5jni.dll"/></patternset>
            <mapper type="merge" to="libcvc5jni-${cvc5.version}.dll"/>
        </unzip>

        <!-- Download the Java bindings -->
        <get src="${cvc5.url}/cvc5-Linux-arm64-java-api-${cvc5.version}.jar" dest="${cvc5.distDir}/cvc5-${cvc5.version}.jar" verbose="true"/>
    </target>

    <target name="publish-cvc5" depends="download-cvc5, load-ivy" description="Publish CVC5 binaries to Ivy repository.">
        <ivy:resolve conf="solver-cvc5" file="solvers_ivy_conf/ivy_cvc5.xml"/>
        <publishToRepository solverName="CVC5" solverVersion="${cvc5.version}" distDir="${cvc5.distDir}"/>

        <!--
          We additionally provide x64-files without arch-attribute for backwards compatibility,
          such that applications can load dependencies without changing their Ivy configuration.
          Those files are not part of any direct configuration, but will be resolved if the
          arch-attribute is not used.
        -->
        <copy todir="repository/${ivy.organisation}/${ivy.module}/">
            <fileset dir="repository/${ivy.organisation}/${ivy.module}/x64/">
                <include name="*-${cvc5.version}.*"/>
            </fileset>
        </copy>
    </target>
</project>
