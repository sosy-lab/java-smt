<?xml version="1.0" encoding="UTF-8" ?>

<!--
This file is part of JavaSMT,
an API wrapper for a collection of SMT solvers:
https://github.com/sosy-lab/java-smt

SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab sts=4 filetype=ant fdm=marker: -->
<project name="publish-solvers-cvc4" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <import file="macros.xml"/>

    <target name="package-cvc4" depends="">
        <!-- Copy CVC4 binaries to the root folder along with the version postfix. -->
        <fail unless="cvc4.path">
            Please specify the path to CVC4 with the flag -Dcvc4.path=/path/to/cvc4.
            The path has to point to the root CVC4 folder, i.e.,
            a checkout of the official git repository from 'https://github.com/CVC4/CVC4.git'.
            Note that shell substitutions do not work and a full absolute path has to be specified.
        </fail>
        <fail unless="cvc4.customRev">
            Please specify a custom revision with the flag -Dcvc4.customRev=XXX.
            The custom revision has to be unique amongst the already known version
            numbers from the ivy repository. The script will append the git revision.
        </fail>

        <!-- get a naive version -->
        <exec executable="git" dir="${cvc4.path}" outputproperty="cvc4.revision" failonerror="true">
            <arg value="show"/>
            <arg value="-s"/>
            <arg value="--format=%h"/>
        </exec>
        <property name="cvc4.version" value="${cvc4.customRev}-g${cvc4.revision}"/>
        <echo message="Building CVC4 in version '${cvc4.version}'"/>

        <!-- build CVC4 -->
        <exec executable="rm" dir="${cvc4.path}" failonerror="true">
            <arg value="-rf"/>
            <arg value="symfpu-CVC4"/>
        </exec>
        <exec executable="./contrib/get-symfpu" dir="${cvc4.path}" failonerror="true"/>
        <exec executable="./configure.sh" dir="${cvc4.path}" failonerror="true">
            <arg value="--symfpu"/>
            <arg value="--language-bindings=java"/>
        </exec>
        <exec executable="make" dir="${cvc4.path}/build/" failonerror="true">
            <arg value="-j4" />
        </exec>

        <!-- remove unneeded symbols -->
        <exec executable="strip" dir="${cvc4.path}/build/src/bindings/java/" failonerror="true">
            <arg value="libcvc4jni.so" />
        </exec>
        <exec executable="strip" dir="${cvc4.path}/build/src/" failonerror="true">
            <arg value="libcvc4.so" />
        </exec>
        <exec executable="strip" dir="${cvc4.path}/build/src/parser/" failonerror="true">
            <arg value="libcvc4parser.so" />
        </exec>

        <!-- fix RPATH and library dependencies -->
        <exec executable="patchelf" dir="${cvc4.path}/build/src/parser/" failonerror="true">
            <arg value="--set-rpath"/><arg value="$ORIGIN"/>
            <arg value="--replace-needed"/><arg value="libcvc4.so.6"/><arg value="libcvc4.so"/>
            <arg value="libcvc4parser.so"/>
        </exec>
        <exec executable="patchelf" dir="${cvc4.path}/build/src/bindings/java/" failonerror="true">
            <arg value="--set-rpath"/><arg value="$ORIGIN"/>
            <arg value="--replace-needed"/><arg value="libcvc4.so.6"/><arg value="libcvc4.so"/>
            <arg value="--replace-needed"/><arg value="libcvc4parser.so.6"/><arg value="libcvc4parser.so"/>
            <arg value="libcvc4jni.so"/>
        </exec>

        <!-- copy library files into directory to be published for IVY -->
        <copy file="${cvc4.path}/build/src/libcvc4.so" tofile="libcvc4-${cvc4.version}.so"/>
        <copy file="${cvc4.path}/build/src/parser/libcvc4parser.so" tofile="libcvc4parser-${cvc4.version}.so"/>
        <copy file="${cvc4.path}/build/src/bindings/java/libcvc4jni.so" tofile="libcvc4jni-${cvc4.version}.so"/>
        <copy file="${cvc4.path}/build/src/bindings/java/CVC4.jar" tofile="CVC4-${cvc4.version}.jar"/>
    </target>

    <target name="publish-cvc4" depends="package-cvc4, load-ivy"
        description="Publish CVC4 binaries to Ivy repository.">
        <ivy:resolve conf="solver-cvc4" file="solvers_ivy_conf/ivy_cvc4.xml" />
        <publishToRepository solverName="CVC4" solverVersion="${cvc4.version}"/>
    </target>
</project>
