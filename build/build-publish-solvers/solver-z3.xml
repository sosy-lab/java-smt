<?xml version="1.0" encoding="UTF-8" ?>

<!--
This file is part of JavaSMT,
an API wrapper for a collection of SMT solvers:
https://github.com/sosy-lab/java-smt

SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab sts=4 filetype=ant fdm=marker: -->
<project name="publish-solvers-z3" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <import file="macros.xml"/>

    <property name="z3.project.name" value="Java Bindings for Z3"/>
    <property name="z3.javadoc.dir" value="Javadoc-z3"/>

    <target name="package-z3" depends="get-z3-version, package-z3-sources, package-z3-javadoc">
        <!-- Copy Z3 binaries to the root folder along with the version postfix.
             This package provides the JNI for direct usage. -->
        <fail unless="z3.path">
            Please specify the path to Z3 with the flag -Dz3.path=/path/to/z3 (e.g. `bin` directory).
            The path has to point to the root Z3 folder (i.e., the path is ending with '/bin') and can be relative or absolute.
            Note that shell substitutions do not work.
            Please provide all releases (Linux64, MacOS, and Windows64) together in the same root directory,
            e.g., copy the releases (especially the content of their `bin` directories) together into one directory.
            The only overlap between those releases is the JAR file, which should be equal anyway.
            Additionally, make the Java sources available in this directory.
            This can be done by:
            - copying the content of sources-zip into the current directory (or vice versa)
            - executing `python scripts/mk_make.py --java` to generate all Java related files. Executing `make` is not required.
        </fail>
        <exec executable="readelf" dir="${z3.path}" outputproperty="z3.elf_details" logError="true" failonerror="true">
            <arg value="-d"/>
            <arg value="libz3.so"/>
        </exec>
        <fail>
            <condition>
                <not><contains string="${z3.elf_details}" substring="(SONAME)"/></not>
            </condition>
            libz3.so has missing SONAME property.
            Please run 'patchelf --set-soname libz3.so ${z3.path}/libz3.so'.
        </fail>
        <!-- Linux64 files -->
        <copy file="${z3.path}/libz3.so" tofile="libz3-${z3.version}.so"/>
        <copy file="${z3.path}/libz3java.so" tofile="libz3java-${z3.version}.so"/>
        <!-- Windows64 files -->
        <copy file="${z3.path}/libz3.dll" tofile="libz3-${z3.version}.dll"/>
        <copy file="${z3.path}/libz3java.dll" tofile="libz3java-${z3.version}.dll"/>
        <!-- MacOS files -->
        <copy file="${z3.path}/libz3.dylib" tofile="libz3-${z3.version}.dylib"/>
        <copy file="${z3.path}/libz3java.dylib" tofile="libz3java-${z3.version}.dylib"/>
        <!-- common Java file, Java is platform independent -->
        <copy file="${z3.path}/com.microsoft.z3.jar" tofile="com.microsoft.z3-${z3.version}.jar"/>
    </target>

    <target name="get-z3-version" unless="z3.version">
        <fail unless="z3.path">
            Please specify the path to Z3 with the flag -Dz3.path=/path/to/z3 (e.g. `bin` directory).
            The path has to point to the root Z3 folder and can be relative or absolute.
            Note that shell substitutions do not work.
            Please provide all releases (Linux64, MacOS, and Windows64) together in the same root directory,
            e.g., copy the releases (especially the content of their `bin` directories) together into one directory.
            The only overlap between those releases is the JAR file, which should be equal anyway.
            Additionally, make the Java sources available in this directory.
            This can be done by:
            - copying the content of sources-zip into the current directory (or vice versa)
            - executing `python scripts/mk_make.py --java` to generate all Java related files. Executing `make` is not required.
        </fail>
        <echo>Option -Dz3.version=... not specified. Trying to determine z3.version from git repository. This will fail if git repository is not available.</echo>
        <exec executable="git" dir="${z3.path}" outputproperty="z3.version" failonerror="true">
            <arg value="describe" />
        </exec>
    </target>

    <target name="publish-z3" depends="package-z3, load-ivy"
        description="Publish Z3 binaries to Ivy repo.">
        <ivy:resolve conf="solver-z3" file="solvers_ivy_conf/ivy_z3.xml" />
        <publishToRepository solverName="Z3" solverVersion="${z3.version}"/>
    </target>

    <target name="check-z3-sources">
        <!-- check for prepared Java sources -->
        <available file="${z3.path}/../src/api/java/Expr.java" property="isZ3NativeExprAvailable" />
        <fail unless="isZ3NativeExprAvailable" message="The sources of Z3 (Java bindings) can not be found." />
        <available file="${z3.path}/../src/api/java/Native.java" property="isZ3NativeApiFileAvailable" />
        <fail unless="isZ3NativeApiFileAvailable" message="The sources of Z3 are not yet prepared. Please execute `python scripts/mk_make.py --java` to generate all Java related files. Executing `make` is not required." />
    </target>

    <target name="package-z3-sources" depends="get-z3-version, check-z3-sources">
        <jar destfile="com.microsoft.z3-${z3.version}-sources.jar" whenmanifestonly="fail">
            <zipfileset dir="${z3.path}/../src/api/java" includes="**/*.java" prefix="com/microsoft/z3"/>
            <zipfileset dir="${z3.path}/../" includes="LICENSE.txt" prefix="META-INF"/>
            <manifest>
                <attribute name="Implementation-Title" value="${z3.project.name}"/>
                <attribute name="Implementation-Version" value="${z3.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="z3-javadoc" depends="get-z3-version, check-z3-sources">
        <!-- cleanup -->
        <delete dir="${z3.javadoc.dir}" quiet="true"/>
        <!-- then write new files.
             Lets ignore minor issues, e.g. using html tag <tt> instead of <code> -->
        <javadoc
            destdir="${z3.javadoc.dir}"
            classpathref="classpath"
            locale="en_US"
            encoding="utf-8"
            windowtitle="${z3.project.name}"
            failonerror="false"
            failonwarning="false"
            overview="doc/javadoc_overview.html"
            >
            <fileset dir="${z3.path}/../src/api/java">
                <include name="**/*.java"/>
            </fileset>
            <link href="https://docs.oracle.com/en/java/javase/11/docs/api/"/>
            <doctitle><![CDATA[<h1>${z3.project.name}</h1>]]></doctitle>
            <tag name="apiNote" description="API Note:"/>
            <tag name="implSpec" description="Implementation Requirements:"/>
            <tag name="implNote" description="Implementation Note:"/>
            <arg line="${javadoc.doclint}"/>
        </javadoc>
    </target>

    <target name="package-z3-javadoc" depends="z3-javadoc">
        <jar jarfile="com.microsoft.z3-${z3.version}-javadoc.jar" whenmanifestonly="fail">
            <zipfileset dir="${z3.path}/../" includes="LICENSE.txt" prefix="META-INF"/>
            <fileset dir="${z3.javadoc.dir}" />
        </jar>
    </target>
</project>
